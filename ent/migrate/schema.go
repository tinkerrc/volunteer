// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CertsColumns holds the columns for the "certs" table.
	CertsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "event_certs", Type: field.TypeUUID, Nullable: true},
	}
	// CertsTable holds the schema information for the "certs" table.
	CertsTable = &schema.Table{
		Name:       "certs",
		Columns:    CertsColumns,
		PrimaryKey: []*schema.Column{CertsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "certs_events_certs",
				Columns:    []*schema.Column{CertsColumns[3]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "start", Type: field.TypeTime},
		{Name: "end", Type: field.TypeTime},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
	}
	// EventVolunteersColumns holds the columns for the "event_volunteers" table.
	EventVolunteersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "event_volunteer_event", Type: field.TypeUUID},
		{Name: "event_volunteer_volunteer", Type: field.TypeUUID},
	}
	// EventVolunteersTable holds the schema information for the "event_volunteers" table.
	EventVolunteersTable = &schema.Table{
		Name:       "event_volunteers",
		Columns:    EventVolunteersColumns,
		PrimaryKey: []*schema.Column{EventVolunteersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "event_volunteers_events_event",
				Columns:    []*schema.Column{EventVolunteersColumns[1]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "event_volunteers_volunteers_volunteer",
				Columns:    []*schema.Column{EventVolunteersColumns[2]},
				RefColumns: []*schema.Column{VolunteersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "eventvolunteer_event_volunteer_event_event_volunteer_volunteer",
				Unique:  true,
				Columns: []*schema.Column{EventVolunteersColumns[1], EventVolunteersColumns[2]},
			},
		},
	}
	// TimeLogsColumns holds the columns for the "time_logs" table.
	TimeLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "hours", Type: field.TypeInt},
		{Name: "minutes", Type: field.TypeInt},
		{Name: "date", Type: field.TypeTime},
		{Name: "time_log_volunteer", Type: field.TypeUUID},
		{Name: "time_log_event", Type: field.TypeUUID, Nullable: true},
	}
	// TimeLogsTable holds the schema information for the "time_logs" table.
	TimeLogsTable = &schema.Table{
		Name:       "time_logs",
		Columns:    TimeLogsColumns,
		PrimaryKey: []*schema.Column{TimeLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "time_logs_volunteers_volunteer",
				Columns:    []*schema.Column{TimeLogsColumns[4]},
				RefColumns: []*schema.Column{VolunteersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "time_logs_events_event",
				Columns:    []*schema.Column{TimeLogsColumns[5]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "timelog_time_log_volunteer",
				Unique:  false,
				Columns: []*schema.Column{TimeLogsColumns[4]},
			},
			{
				Name:    "timelog_date",
				Unique:  false,
				Columns: []*schema.Column{TimeLogsColumns[3]},
			},
		},
	}
	// TrainingsColumns holds the columns for the "trainings" table.
	TrainingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "is_certified", Type: field.TypeBool, Default: false},
		{Name: "training_volunteer", Type: field.TypeUUID, Nullable: true},
		{Name: "training_cert", Type: field.TypeUUID, Nullable: true},
	}
	// TrainingsTable holds the schema information for the "trainings" table.
	TrainingsTable = &schema.Table{
		Name:       "trainings",
		Columns:    TrainingsColumns,
		PrimaryKey: []*schema.Column{TrainingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "trainings_volunteers_volunteer",
				Columns:    []*schema.Column{TrainingsColumns[4]},
				RefColumns: []*schema.Column{VolunteersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "trainings_certs_cert",
				Columns:    []*schema.Column{TrainingsColumns[5]},
				RefColumns: []*schema.Column{CertsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "training_training_volunteer_training_cert",
				Unique:  true,
				Columns: []*schema.Column{TrainingsColumns[4], TrainingsColumns[5]},
			},
			{
				Name:    "training_start_date",
				Unique:  false,
				Columns: []*schema.Column{TrainingsColumns[1]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VolunteersColumns holds the columns for the "volunteers" table.
	VolunteersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "middle_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "notes", Type: field.TypeString},
	}
	// VolunteersTable holds the schema information for the "volunteers" table.
	VolunteersTable = &schema.Table{
		Name:       "volunteers",
		Columns:    VolunteersColumns,
		PrimaryKey: []*schema.Column{VolunteersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "volunteer_first_name_last_name",
				Unique:  false,
				Columns: []*schema.Column{VolunteersColumns[2], VolunteersColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CertsTable,
		EventsTable,
		EventVolunteersTable,
		TimeLogsTable,
		TrainingsTable,
		UsersTable,
		VolunteersTable,
	}
)

func init() {
	CertsTable.ForeignKeys[0].RefTable = EventsTable
	EventVolunteersTable.ForeignKeys[0].RefTable = EventsTable
	EventVolunteersTable.ForeignKeys[1].RefTable = VolunteersTable
	TimeLogsTable.ForeignKeys[0].RefTable = VolunteersTable
	TimeLogsTable.ForeignKeys[1].RefTable = EventsTable
	TrainingsTable.ForeignKeys[0].RefTable = VolunteersTable
	TrainingsTable.ForeignKeys[1].RefTable = CertsTable
}
