// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CertificationsColumns holds the columns for the "certifications" table.
	CertificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// CertificationsTable holds the schema information for the "certifications" table.
	CertificationsTable = &schema.Table{
		Name:       "certifications",
		Columns:    CertificationsColumns,
		PrimaryKey: []*schema.Column{CertificationsColumns[0]},
	}
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
	}
	// TimeLogsColumns holds the columns for the "time_logs" table.
	TimeLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "hours", Type: field.TypeInt},
		{Name: "minutes", Type: field.TypeInt},
		{Name: "date", Type: field.TypeTime},
		{Name: "time_log_volunteer", Type: field.TypeUUID},
		{Name: "time_log_event", Type: field.TypeInt, Nullable: true},
	}
	// TimeLogsTable holds the schema information for the "time_logs" table.
	TimeLogsTable = &schema.Table{
		Name:       "time_logs",
		Columns:    TimeLogsColumns,
		PrimaryKey: []*schema.Column{TimeLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "time_logs_volunteers_volunteer",
				Columns:    []*schema.Column{TimeLogsColumns[4]},
				RefColumns: []*schema.Column{VolunteersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "time_logs_events_event",
				Columns:    []*schema.Column{TimeLogsColumns[5]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VolunteersColumns holds the columns for the "volunteers" table.
	VolunteersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "middle_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "notes", Type: field.TypeString},
	}
	// VolunteersTable holds the schema information for the "volunteers" table.
	VolunteersTable = &schema.Table{
		Name:       "volunteers",
		Columns:    VolunteersColumns,
		PrimaryKey: []*schema.Column{VolunteersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CertificationsTable,
		EventsTable,
		TimeLogsTable,
		UsersTable,
		VolunteersTable,
	}
)

func init() {
	TimeLogsTable.ForeignKeys[0].RefTable = VolunteersTable
	TimeLogsTable.ForeignKeys[1].RefTable = EventsTable
}
