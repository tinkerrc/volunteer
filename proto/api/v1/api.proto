syntax = "proto3";

package api.v1;

import "google/protobuf/timestamp.proto";
import "google/type/interval.proto";

option go_package = "github.com/tinkerrc/volunteer/proto/api/v1;apiv1";

service VolunteerService {
  // users
  // rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  // rpc GetUser(GetUserRequest) returns (GetUserResponse);
  // rpc ListUsers(GetUserRequest) returns (GetUserResponse);
  // rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  // === VOLUNTEERS
  // Registration
  rpc CreateVolunteer(CreateVolunteerRequest) returns (CreateVolunteerResponse);
  // Requires user
  rpc GetVolunteer(GetVolunteerRequest) returns (GetVolunteerResponse);
  // Requires volunteer
  rpc GetVolunteerProfile(GetVolunteerProfileRequest) returns (GetVolunteerProfileResponse);
  // Requires user
  rpc ListVolunteers(ListVolunteersRequest) returns (ListVolunteersResponse);
  // Requires user
  rpc UpdateVolunteer(UpdateVolunteerRequest) returns (UpdateVolunteerResponse);
  // Requires volunteer
  rpc UpdateVolunteerProfile(UpdateVolunteerProfileRequest) returns (UpdateVolunteerProfileResponse);
  // === TIME LOGS
  // Requires volunteer
  rpc CreateTimeLog(CreateTimeLogRequest) returns (CreateTimeLogResponse);
  // Requires user or volunteer
  rpc ListTimeLogs(ListTimeLogsRequest) returns (ListTimeLogsResponse);
  // Requires user or volunteer
  rpc UpdateTimeLog(UpdateTimeLogRequest) returns (UpdateTimeLogResponse);
  // Requires user or volunteer
  rpc DeleteTimeLog(DeleteTimeLogRequest) returns (DeleteTimeLogResponse);
  // === VOLUNTEER TRAINING
  // Requires user
  rpc StartTraining(StartTrainingRequest) returns (StartTrainingResponse);
  // Requires user
  rpc FinishTraining(FinishTrainingRequest) returns (FinishTrainingResponse);
  // Requires user
  rpc ListTrainings(ListTrainingsRequest) returns (ListTrainingsResponse);
  // Requires user
  rpc DeleteTraining(DeleteTrainingRequest) returns (DeleteTrainingResponse);
  // === CERTS
  // Requires user
  rpc CreateCert(CreateCertRequest) returns (CreateCertResponse);
  // Requires user
  rpc ListCerts(ListCertsRequest) returns (ListCertsResponse);
  // Requires user
  rpc GetCert(GetCertRequest) returns (GetCertResponse);
  // Requires user
  rpc UpdateCert(UpdateCertRequest) returns (UpdateCertResponse);
  // Requires user
  rpc DeleteCert(DeleteCertRequest) returns (DeleteCertResponse);
  // === EVENTS
  // Requires user
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
  // Requires user
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse);
  // Requires user
  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse);
  // Requires user
  rpc AddEventCerts(AddEventCertsRequest) returns (AddEventCertsResponse);
  // Requires user
  rpc RemoveEventCerts(RemoveEventCertsRequest) returns (RemoveEventCertsResponse);
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse);
  // === EVENT VOLUNTEERS
  rpc ListEventVolunteers(ListEventVolunteersRequest) returns (ListEventVolunteersResponse);
  rpc AddEventVolunteers(AddEventVolunteersRequest) returns (AddEventVolunteersResponse);
  rpc RemoveEventVolunteers(RemoveEventVolunteersRequest) returns (RemoveEventVolunteersResponse);
}

// message User {
//   string id = 1;
//   string first_name = 2;
//   string middle_name = 3;
//   string last_name = 4;
//   string email = 5;
//   bool is_admin = 6;
// }

// message CreateUserRequest {
//   string first_name = 2;
//   string middle_name = 3;
//   string last_name = 4;
//   string email = 5;
// }

// message CreateUserResponse {
//   string id = 1;
// }

// message GetUserRequest {
//   optional string id = 1;
// }

// message GetUserResponse {
//   User user = 1;
// }

// message UpdateUserRequest {
//   string id = 1;
//   optional string first_name = 2;
//   optional string middle_name = 3;
//   optional string last_name = 4;
//   optional bool is_admin = 6;
// }

// message UpdateUserResponse {}

message ListVolunteersRequest {
  int32 page_size = 1;
  int32 page_number = 2;
  repeated string cert_ids = 3;
}

message Volunteer {
  string id = 1;
  string first_name = 2;
  string middle_name = 3;
  string last_name = 4;
  string email = 5;
  string phone = 6;
  // optional google.type.PostalAddress address = 7;
  string address = 7;
  string notes = 8;
  Duration total_time = 9;
}

message VolunteerProfile {
  string id = 1;
  string first_name = 2;
  string middle_name = 3;
  string last_name = 4;
  string email = 5;
  string phone = 6;
  string address = 7;
}

message CreateVolunteerRequest {
  string first_name = 2;
  string middle_name = 3;
  string last_name = 4;
  string email = 5;
  string phone = 6;
  // google.type.PostalAddress address = 7;
  string address = 7;
  string notes = 8;
}

message CreateVolunteerResponse {
  string id = 1;
}

message GetVolunteerRequest {
  string volunteer_id = 1;
}

message GetVolunteerProfileRequest {}

message GetVolunteerProfileResponse {
  VolunteerProfile volunteer = 1;
}

message GetVolunteerResponse {
  Volunteer volunteer = 1;
}

message ListVolunteersResponse {
  repeated Volunteer volunteers = 1;
}

message UpdateVolunteerRequest {
  string id = 1;
  optional string first_name = 2;
  optional string middle_name = 3;
  optional string last_name = 4;
  optional string phone = 6;
  // optional google.type.PostalAddress address = 7;
  optional string address = 7;
  optional string notes = 8;
}

message UpdateVolunteerResponse {}

message UpdateVolunteerProfileRequest {
  optional string first_name = 2;
  optional string middle_name = 3;
  optional string last_name = 4;
  optional string phone = 6;
  optional string address = 7;
}

message UpdateVolunteerProfileResponse {}

message Duration {
  int32 hours = 1;
  int32 minutes = 2;
}

message CreateTimeLogRequest {
  string volunteer_id = 2;
  optional string event_id = 3;
  Duration duration = 4;
  google.protobuf.Timestamp date = 5;
}

message CreateTimeLogResponse {
  string id = 1;
}

message TimeLog {
  string id = 1;
  string volunteer_id = 2;
  optional string event_id = 3;
  Duration duration = 4;
  google.protobuf.Timestamp date = 5;
}

message ListTimeLogsRequest {
  int32 page_size = 1;
  int32 page_number = 2;
  optional string volunteer_id = 3;
}

message ListTimeLogsResponse {
  repeated TimeLog logs = 1;
}

message UpdateTimeLogRequest {
  string id = 1;
  optional Duration duration = 4;
  optional google.protobuf.Timestamp date = 5;
}

message UpdateTimeLogResponse {}

message DeleteTimeLogRequest {
  string id = 1;
}

message DeleteTimeLogResponse {}

message Cert {
  string id = 1;
  string name = 2;
  string description = 3;
}

message ListCertsRequest {
  int32 page_size = 1;
  int32 page_number = 2;
}

message ListCertsResponse {
  repeated Cert certs = 1;
}

message GetCertRequest {
  string id = 1;
}

message GetCertResponse {
  Cert cert = 1;
}

message UpdateCertRequest {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
}

message UpdateCertResponse {}

message DeleteCertRequest {
  string id = 1;
}

message DeleteCertResponse {}

message StartTrainingRequest {
  string volunteer_id = 1;
  string cert_id = 2;
}

message StartTrainingResponse {
  string id = 1;
}

message FinishTrainingRequest {
  string id = 1;
}

message FinishTrainingResponse {}

message Training {
  string id = 1;
  string volunteer_id = 2;
  string cert_id = 3;
  google.protobuf.Timestamp start_date = 4;
  optional google.protobuf.Timestamp end_date = 5;
  bool is_certified = 6;
}

message ListTrainingsRequest {
  int32 page_size = 1;
  int32 page_number = 2;
  optional string volunteer_id = 3;
  optional string cert_id = 4;
  optional bool is_certified = 5;
}
message ListTrainingsResponse {
  repeated Training trainings = 1;
}

message DeleteTrainingRequest {
  string id = 1;
}

message DeleteTrainingResponse {}

message CreateCertRequest {
  string name = 2;
  string description = 3;
}

message CreateCertResponse {
  string id = 1;
}

message Event {
  string id = 1;
  string name = 2;
  string description = 3;
  google.type.Interval interval = 4;
  repeated string cert_ids = 5;
}

message CreateEventRequest {
  string name = 2;
  string description = 3;
  google.type.Interval interval = 4;
  repeated string cert_ids = 5;
}

message CreateEventResponse {
  string id = 1;
}

message ListEventsRequest {
  int32 page_size = 1;
  int32 page_number = 2;
  // repeated string cert_ids = 3;
}

message ListEventsResponse {
  repeated Event events = 1;
}

message UpdateEventRequest {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional google.type.Interval interval = 4;
}

message UpdateEventResponse {}

message AddEventCertsRequest {
  string id = 1;
  repeated string cert_ids = 5;
}

message AddEventCertsResponse {}

message RemoveEventCertsRequest {
  string id = 1;
  repeated string cert_ids = 5;
}

message RemoveEventCertsResponse {}

message DeleteEventRequest {
  string event_id = 1;
}

message DeleteEventResponse {}

message ListEventVolunteersRequest {
  string event_id = 1;
}

message ListEventVolunteersResponse {
  repeated Volunteer volunteers = 1;
}

message AddEventVolunteersRequest {
  repeated string volunteer_ids = 1;
}

message AddEventVolunteersResponse {}

message RemoveEventVolunteersRequest {
  repeated string volunteer_ids = 1;
}

message RemoveEventVolunteersResponse {}
