package api

import (
	"context"
	"errors"

	"connectrpc.com/connect"

	apiv1 "github.com/tinkerrc/volunteer/proto/api/v1" // generated by protoc-gen-go
)

func (s *APIServer) ListCerts(
	ctx context.Context,
	req *connect.Request[apiv1.ListCertsRequest],
) (*connect.Response[apiv1.ListCertsResponse], error) {
	err := s.ensureAdmin(ctx)
	if err != nil {
		return nil, connect.NewError(connect.CodePermissionDenied, errors.New("unauthorized"))
	}
	m := req.Msg
	if m.PageSize > 50 {
		return nil, connect.NewError(connect.CodeInvalidArgument, errors.New("page size too large"))
	}
	cs, err := s.Db.Cert.Query().Limit(int(m.PageSize)).Offset(int(m.PageSize * m.PageNumber)).All(ctx)
	if err != nil {
		return nil, connect.NewError(connect.CodeInternal, errors.New("could not query certs"))
	}
	cProtos := make([]*apiv1.Cert, len(cs))
	for idx, c := range cs {
		cProtos[idx] = &apiv1.Cert{
			Id:          c.ID.String(),
			Name:        c.Name,
			Description: c.Description,
		}
	}
	res := connect.NewResponse(&apiv1.ListCertsResponse{
		Certs: []*apiv1.Cert{},
	})
	return res, nil
}
