package api

import (
	"context"
	"errors"

	"connectrpc.com/connect"

	apiv1 "github.com/tinkerrc/volunteer/proto/api/v1" // generated by protoc-gen-go
)

func (s *APIServer) CreateEvent(
	ctx context.Context,
	req *connect.Request[apiv1.CreateEventRequest],
) (*connect.Response[apiv1.CreateEventResponse], error) {
	err := s.ensureAdmin(ctx)
	if err != nil {
		return nil, err
	}
	m := req.Msg
	create := s.Db.Event.Create().
		SetName(m.Name).
		SetDescription(m.Description).
		SetIsRecurring(m.IsRecurring)
	if m.IsRecurring {
		if m.RecurDescription == nil {
			return nil, connect.NewError(connect.CodeInvalidArgument, errors.New("expected recur description"))
		}
		create = create.SetIsRecurActive(true).SetRecurDescription(*m.RecurDescription)
	} else {
		if m.Interval == nil {
			return nil, connect.NewError(connect.CodeInvalidArgument, errors.New("expected interval"))
		}
		create = create.SetStart(m.Interval.StartTime.AsTime()).SetEnd(m.Interval.EndTime.AsTime())
	}
	e, err := create.Save(ctx)
	if err != nil {
		return nil, connect.NewError(connect.CodeInternal, errors.New("could not create event"))
	}
	res := connect.NewResponse(&apiv1.CreateEventResponse{
		Id: e.ID.String(),
	})
	return res, nil
}
