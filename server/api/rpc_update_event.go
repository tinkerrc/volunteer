package api

import (
	"context"
	"errors"

	"connectrpc.com/connect"

	"github.com/google/uuid"
	apiv1 "github.com/tinkerrc/volunteer/proto/api/v1" // generated by protoc-gen-go
)

func (s *APIServer) UpdateEvent(
	ctx context.Context,
	req *connect.Request[apiv1.UpdateEventRequest],
) (*connect.Response[apiv1.UpdateEventResponse], error) {
	err := s.ensureAdmin(ctx)
	if err != nil {
		return nil, err
	}
	m := req.Msg
	eid, err := uuid.Parse(m.Id)
	if err != nil {
		return nil, connect.NewError(connect.CodeInvalidArgument, errors.New(("invalid cert id")))
	}
	update := s.Db.Event.UpdateOneID(eid)
	if m.Name != nil {
		update = update.SetName(*m.Name)
	}
	if m.Description != nil {
		update = update.SetDescription(*m.Description)
	}
	if m.Interval != nil {
		update = update.
			SetStart(m.Interval.StartTime.AsTime()).
			SetEnd(m.Interval.EndTime.AsTime())
	}
	_, err = update.Save(ctx)
	if err != nil {
		return nil, connect.NewError(connect.CodeInternal, errors.New("could not update event"))
	}
	res := connect.NewResponse(&apiv1.UpdateEventResponse{})
	return res, nil
}
