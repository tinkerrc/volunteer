package api

import (
	"context"
	"errors"

	"connectrpc.com/connect"

	"github.com/google/uuid"
	"github.com/tinkerrc/volunteer/ent/cert"
	apiv1 "github.com/tinkerrc/volunteer/proto/api/v1" // generated by protoc-gen-go
)

func (s *APIServer) GetCert(
	ctx context.Context,
	req *connect.Request[apiv1.GetCertRequest],
) (*connect.Response[apiv1.GetCertResponse], error) {
	err := s.ensureAdmin(ctx)
	if err != nil {
		return nil, err
	}
	m := req.Msg
	cid, err := uuid.Parse(m.Id)
	if err != nil {
		return nil, connect.NewError(connect.CodeInvalidArgument, errors.New("invalid cert id"))
	}
	c, err := s.Db.Cert.Query().Where(cert.ID(cid)).First(ctx)
	if err != nil {
		return nil, connect.NewError(connect.CodeNotFound, errors.New("cert not found"))
	}
	res := connect.NewResponse(&apiv1.GetCertResponse{
		Cert: &apiv1.Cert{
			Id:          c.ID.String(),
			Name:        c.Name,
			Description: c.Description,
		},
	})
	return res, nil
}
