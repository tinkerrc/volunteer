package api

import (
	"context"
	"errors"

	"connectrpc.com/connect"

	"github.com/google/uuid"
	"github.com/tinkerrc/volunteer/ent/timelog"
	"github.com/tinkerrc/volunteer/ent/volunteer"
	apiv1 "github.com/tinkerrc/volunteer/proto/api/v1" // generated by protoc-gen-go
)

// TODO: implement
func (s *APIServer) DeleteTimeLog(
	ctx context.Context,
	req *connect.Request[apiv1.DeleteTimeLogRequest],
) (*connect.Response[apiv1.DeleteTimeLogResponse], error) {
	id, err := uuid.Parse(req.Msg.Id)
	if err != nil {
		return nil, connect.NewError(connect.CodeInvalidArgument, errors.New("invalid id"))
	}

	del := s.Db.TimeLog.DeleteOneID(id)
	err = s.ensureAdmin(ctx)
	if err != nil {
		v, err := s.ensureVolunteer(ctx)
		if err != nil {
			return nil, connect.NewError(connect.CodeUnauthenticated, errors.New("unauthenticated"))
		}
		del = del.Where(timelog.HasVolunteerWith(volunteer.ID(v.ID)))
	}

	err = del.Exec(ctx)
	if err != nil {
		return nil, connect.NewError(connect.CodeNotFound, errors.New("not found"))
	}
	res := connect.NewResponse(&apiv1.DeleteTimeLogResponse{})
	return res, nil
}
