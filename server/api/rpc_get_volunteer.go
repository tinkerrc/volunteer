package api

import (
	"context"
	"errors"

	"connectrpc.com/connect"

	"github.com/google/uuid"
	"github.com/tinkerrc/volunteer/ent/volunteer"
	apiv1 "github.com/tinkerrc/volunteer/proto/api/v1" // generated by protoc-gen-go
)

func (s *APIServer) GetVolunteer(
	ctx context.Context,
	req *connect.Request[apiv1.GetVolunteerRequest],
) (*connect.Response[apiv1.GetVolunteerResponse], error) {
	err := s.ensureAdmin(ctx)
	if err != nil {
		return nil, err
	}
	id, err := uuid.Parse(req.Msg.VolunteerId)
	if err != nil {
		return nil, connect.NewError(connect.CodeInvalidArgument, errors.New("bad uuid"))
	}
	v, err := s.Db.Volunteer.Query().Where(volunteer.ID(id)).Only(ctx)
	if err != nil {
		return nil, connect.NewError(connect.CodeNotFound, errors.New("not found"))
	}
	p, err := s.getVolunteerProto(ctx, v)
	if err != nil {
		return nil, err
	}
	res := connect.NewResponse(&apiv1.GetVolunteerResponse{
		Volunteer: p,
	})
	return res, nil
}
